generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id       Int       @id @default(autoincrement())
  fullName String
  email    String    @unique
  password String
  role     Role      @default(USER)
  verified DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cart  Cart?
  Order Order[]
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]
}

model Product {
  id       Int    @id @default(autoincrement())
  name     String
  imageUrl String

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ingredient Ingredient[]
  // productItems ProductItem[] deleted
}

model Ingredient {
  id       Int    @id @default(autoincrement())
  name     String
  price    Int
  imageUrl String

  products  Product[]
  cartItems CartItem[]
}

model ProductItem {
  id        Int  @id @default(autoincrement())
  price     Int
  size      Int?
  doughType Int?

  // product   Product @relation(fields: [productId], references: [id])
  productId Int

  CartItem CartItem[]
}

model Cart {
  id Int @id @default(autoincrement())

  userId Int   @unique
  user   User? @relation(fields: [userId], references: [id])

  token String?

  totalAmount Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cartItems CartItem[]
}

model CartItem {
  id Int @id @default(autoincrement())

  productItem   ProductItem @relation(fields: [productItemId], references: [id])
  productItemId Int

  cart   Cart @relation(fields: [cartId], references: [id])
  cartId Int

  quantity Int

  ingredients Ingredient[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id Int @id @default(autoincrement())

  user   User? @relation(fields: [userId], references: [id])
  userId Int?

  token String

  totalAmount Int
  status      orderStatus
}

enum orderStatus {
  PENDING
  SUCCEEDED
  CANCELLED
}

enum Role {
  USER
  ADMIN
}
